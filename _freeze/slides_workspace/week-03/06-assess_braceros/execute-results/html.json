{
  "hash": "17c1a8f93554677dbeb9f1a55079e21c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"[Assess] Bracero Farmworker Case Study\"\nsubtitle: \"üìç Yakima Valley, WA\"\ndate: \"September 19, 2025\"\nformat: \n  revealjs:\n    theme:\n      - default\n    css: custom.scss\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\n    center: true\nexecute:\n  freeze: auto\n---\n\n# Class Overview \n- Centering activity\n- Setting the stage\n- Paired coding\n- Group Debrief\n\n# Centering Activity\n\n# Setting the Stage\n- This week's focus is on data tidying and transformation\n- Using metadata from 90 interviews in the Bracero Archive that I scraped\n- Important to note that each row represents a person, a life, and a family impacted by the Bracero Program\n\n# Let's get Started\n- Find your pair\n- Open Posit\n\n# First Steps\n- Import Data\n- Load packages\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl) # for loading data\nlibrary(tidyverse) # for tidying\n```\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n# Load Data\n\n::: {.cell}\n\n```{.r .cell-code}\nbracero <- read_excel(\"data/bracero_pull.xlsx\")\n```\n:::\n\n\n# Part II: Today's Goal\n- Understand data structure\n- Transform and tidy data for necessary questions\n- Explore and summarize patterns\n- Connect it to theoretical understandings of procedural justice\n\n## Our data {.smaller}\n- 90 rows (interviews)\n- 6 variables (all `chr` type)\n  - title = Person interviewed\n  - subject = topic of interview\n  - description = summary of interview\n  - date = date of interview\n  - identifier = link to original interview file\n  - language = language interview was conducted in\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(bracero)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 90\nColumns: 6\n$ title       <chr> \"Richard Hancock\", \"Pedro Cantor\", \"Asterio L√≥pez Le√≥n\", \"‚Ä¶\n$ subject     <chr> \"Do√±a Ana County Farm Bureau\", \"Bracero\", \"Bracero\", \"Brac‚Ä¶\n$ description <chr> \"Biographical Synopsis of Interviewee:  Richard Hancock wa‚Ä¶\n$ date        <chr> \"2003-04-21\", \"2005-07-27\", \"2006-05-22\", \"2005-09-01\", \"2‚Ä¶\n$ identifier  <chr> \"https://braceroarchive.org/items/show/82;https://braceroa‚Ä¶\n$ language    <chr> \"eng\", \"spa\", \"spa\", \"spa\", \"eng\", \"spa\", \"spa\", \"eng\", \"s‚Ä¶\n```\n\n\n:::\n:::\n\n\n## Data Types {.smaller}\n- `chr` is character\n- `dbl` is double (number)\n- `int` is an integer\n- `dttm` is date-time \n- `fct` is factor\n\n<span style=\"color:red;\">Thoughts on what variables we may want to change the data types of?</span>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 90\nColumns: 6\n$ title       <chr> \"Richard Hancock\", \"Pedro Cantor\", \"Asterio L√≥pez Le√≥n\", \"‚Ä¶\n$ subject     <chr> \"Do√±a Ana County Farm Bureau\", \"Bracero\", \"Bracero\", \"Brac‚Ä¶\n$ description <chr> \"Biographical Synopsis of Interviewee:  Richard Hancock wa‚Ä¶\n$ date        <chr> \"2003-04-21\", \"2005-07-27\", \"2006-05-22\", \"2005-09-01\", \"2‚Ä¶\n$ identifier  <chr> \"https://braceroarchive.org/items/show/82;https://braceroa‚Ä¶\n$ language    <chr> \"eng\", \"spa\", \"spa\", \"spa\", \"eng\", \"spa\", \"spa\", \"eng\", \"s‚Ä¶\n```\n\n\n:::\n:::\n\n\n# Transforming Data (Columns) {.smaller}\n- Four functions can change the columns of your data without affecting your rows \n  - mutate(): creates new columns based on existing ones\n  - select(): chooses what columns you want in your dataframe\n  - rename(): changes the names of current columns\n  - relocate(): changes the position of those columns \n\n## mutate() function {.smaller}\n- We use the mutate function to change the `date` column to a date format. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nbracero |>\n  mutate(date_format = as.Date(date)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 90 √ó 7\n   title               subject description date  identifier language date_format\n   <chr>               <chr>   <chr>       <chr> <chr>      <chr>    <date>     \n 1 Richard Hancock     Do√±a A‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ eng      2003-04-21 \n 2 Pedro Cantor        Bracero \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa      2005-07-27 \n 3 Asterio L√≥pez Le√≥n  Bracero \"Biographi‚Ä¶ 2006‚Ä¶ https://b‚Ä¶ spa      2006-05-22 \n 4 Vincente Delgado    Bracero \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa      2005-09-01 \n 5 Inez Rios           Intera‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ eng      2003-01-31 \n 6 Manuel Enriquez Sa‚Ä¶ Bureau‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ spa      2003-02-06 \n 7 Alberto Montes Gon‚Ä¶ Bracero \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa      2005-07-27 \n 8 Ernesto Espino      Son of‚Ä¶ \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ eng      2005-11-12 \n 9 Jes√∫s Ort√≠z Torres  Bracero \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa      2005-08-31 \n10 Jos√© G. Corral      Son of‚Ä¶ \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa      2005-11-12 \n# ‚Ñπ 80 more rows\n```\n\n\n:::\n:::\n\n\n## mutate() function (cont.) {.smaller}\n- We can also use mutate for creating new columns, and we can pair it with additional functions, such as ifelse statements. \n- Perhaps we were interested in creating a new column that defines whether an interview is from a bracero worker or not. \n  - Note that if we wanted to further classify the subject, we might create a factor column and use the `case_match()` function, rather than an ifelse statement.\n\n::: {.cell}\n\n```{.r .cell-code}\nbracero |> \n  mutate(subject_binary = ifelse(subject %in% c(\"bracero\", \"Bracero\"), \"Bracero\", \"Non-Bracero\" )) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 90 √ó 7\n   title            subject description date  identifier language subject_binary\n   <chr>            <chr>   <chr>       <chr> <chr>      <chr>    <chr>         \n 1 Richard Hancock  Do√±a A‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ eng      Non-Bracero   \n 2 Pedro Cantor     Bracero \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa      Bracero       \n 3 Asterio L√≥pez L‚Ä¶ Bracero \"Biographi‚Ä¶ 2006‚Ä¶ https://b‚Ä¶ spa      Bracero       \n 4 Vincente Delgado Bracero \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa      Bracero       \n 5 Inez Rios        Intera‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ eng      Non-Bracero   \n 6 Manuel Enriquez‚Ä¶ Bureau‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ spa      Non-Bracero   \n 7 Alberto Montes ‚Ä¶ Bracero \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa      Bracero       \n 8 Ernesto Espino   Son of‚Ä¶ \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ eng      Non-Bracero   \n 9 Jes√∫s Ort√≠z Tor‚Ä¶ Bracero \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa      Bracero       \n10 Jos√© G. Corral   Son of‚Ä¶ \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa      Non-Bracero   \n# ‚Ñπ 80 more rows\n```\n\n\n:::\n:::\n\n\n## select() function {.smaller}\n- Perhaps we'd like to remove the original `date` column from our dataframe. \n- `select()` can be used to select or deselect columns. \n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|3|7|11\"}\n# select column you don't want\nbracero |>\n select(-date)\n\n# select columns you do want\nbracero |>\n select(title, subject, description, date, identifier, language, date_format)\n\n# select columns in a row, except the column you don't want\nbracero |>\n  select(title:description, identifier:date_format)\n```\n:::\n\n\n## rename() function {.smaller}\n- sometimes original column names aren't very descriptive, or they're too long. \n- the `rename()` function can help. \n  - let's rename \"title\" to something more descriptive.\n\n::: {.cell}\n\n```{.r .cell-code}\nbracero |>\n  rename(\"interviewee\" = \"title\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 90 √ó 6\n   interviewee              subject        description date  identifier language\n   <chr>                    <chr>          <chr>       <chr> <chr>      <chr>   \n 1 Richard Hancock          Do√±a Ana Coun‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ eng     \n 2 Pedro Cantor             Bracero        \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa     \n 3 Asterio L√≥pez Le√≥n       Bracero        \"Biographi‚Ä¶ 2006‚Ä¶ https://b‚Ä¶ spa     \n 4 Vincente Delgado         Bracero        \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa     \n 5 Inez Rios                Interaction w‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ eng     \n 6 Manuel Enriquez Savignac Bureau of Emp‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ spa     \n 7 Alberto Montes Gonz√°lez  Bracero        \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa     \n 8 Ernesto Espino           Son of bracero \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ eng     \n 9 Jes√∫s Ort√≠z Torres       Bracero        \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa     \n10 Jos√© G. Corral           Son of a brac‚Ä¶ \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa     \n# ‚Ñπ 80 more rows\n```\n\n\n:::\n:::\n\n\n## relocate() function {.smaller}\n- Say we want the `identifier` column at the very end of the dataframe\n- `relocate` automatically puts the column at the front, so you have to specify `.after` or `.before`.\n\n::: {.cell}\n\n```{.r .cell-code}\nbracero |> \n relocate(identifier, .after = language)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 90 √ó 6\n   title                    subject        description date  language identifier\n   <chr>                    <chr>          <chr>       <chr> <chr>    <chr>     \n 1 Richard Hancock          Do√±a Ana Coun‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ eng      https://b‚Ä¶\n 2 Pedro Cantor             Bracero        \"Biographi‚Ä¶ 2005‚Ä¶ spa      https://b‚Ä¶\n 3 Asterio L√≥pez Le√≥n       Bracero        \"Biographi‚Ä¶ 2006‚Ä¶ spa      https://b‚Ä¶\n 4 Vincente Delgado         Bracero        \"Biographi‚Ä¶ 2005‚Ä¶ spa      https://b‚Ä¶\n 5 Inez Rios                Interaction w‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ eng      https://b‚Ä¶\n 6 Manuel Enriquez Savignac Bureau of Emp‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ spa      https://b‚Ä¶\n 7 Alberto Montes Gonz√°lez  Bracero        \"Biographi‚Ä¶ 2005‚Ä¶ spa      https://b‚Ä¶\n 8 Ernesto Espino           Son of bracero \"Biographi‚Ä¶ 2005‚Ä¶ eng      https://b‚Ä¶\n 9 Jes√∫s Ort√≠z Torres       Bracero        \"Biographi‚Ä¶ 2005‚Ä¶ spa      https://b‚Ä¶\n10 Jos√© G. Corral           Son of a brac‚Ä¶ \"Biographi‚Ä¶ 2005‚Ä¶ spa      https://b‚Ä¶\n# ‚Ñπ 80 more rows\n```\n\n\n:::\n:::\n\n\n## Put it together {.smaller}\n- We can put all of these data transformation actions together using the pipe `|>` function\n\n::: {.cell}\n\n```{.r .cell-code}\nbracero_clean <- bracero |>\n  mutate(date_format = as.Date(date)) |>\n  select(-date) |>\n  rename(\"interviewee\" = \"title\") |>\n  relocate(identifier, .after = date_format)\n\nhead(bracero_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 √ó 6\n  interviewee              subject   description language date_format identifier\n  <chr>                    <chr>     <chr>       <chr>    <date>      <chr>     \n1 Richard Hancock          Do√±a Ana‚Ä¶ \"Biographi‚Ä¶ eng      2003-04-21  https://b‚Ä¶\n2 Pedro Cantor             Bracero   \"Biographi‚Ä¶ spa      2005-07-27  https://b‚Ä¶\n3 Asterio L√≥pez Le√≥n       Bracero   \"Biographi‚Ä¶ spa      2006-05-22  https://b‚Ä¶\n4 Vincente Delgado         Bracero   \"Biographi‚Ä¶ spa      2005-09-01  https://b‚Ä¶\n5 Inez Rios                Interact‚Ä¶ \"Biographi‚Ä¶ eng      2003-01-31  https://b‚Ä¶\n6 Manuel Enriquez Savignac Bureau o‚Ä¶ \"Biographi‚Ä¶ spa      2003-02-06  https://b‚Ä¶\n```\n\n\n:::\n:::\n\n\n# Exercise One\n- Starting with the `bracero` dataframe, code the following three actions using the `|>` into a new dataframe called `bracero_ex1`: \n\n  - mutate the `date` column to be in a DD-MM-YYYY format called `date_format`\n    - hint: you may need to use the `?as.Date()` helper function\n  - select the `title` , `date_format`, and `description` columns\n  - reorder the remaining columns by date\n\n# Transforming Data (Rows)\n- Moving on to rows! \n  - `filter()` is a function that allows you to keep rows of interest (but won't change the order of your rows) \n  - `arrange()` changes the order of your rows (but won't filter for anything)\n\n## filter() function {.smaller}\n- Use the filter() function to select rows that correspond to values of interest. \n- Say we're interested in only interviews that are spoken in spanish:\n- use `==` to filter for a direct match \n\n::: {.cell}\n\n```{.r .cell-code}\nbracero_clean |>\n  filter(language == \"spa\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 75 √ó 6\n   interviewee              subject  description language date_format identifier\n   <chr>                    <chr>    <chr>       <chr>    <date>      <chr>     \n 1 Pedro Cantor             Bracero  \"Biographi‚Ä¶ spa      2005-07-27  https://b‚Ä¶\n 2 Asterio L√≥pez Le√≥n       Bracero  \"Biographi‚Ä¶ spa      2006-05-22  https://b‚Ä¶\n 3 Vincente Delgado         Bracero  \"Biographi‚Ä¶ spa      2005-09-01  https://b‚Ä¶\n 4 Manuel Enriquez Savignac Bureau ‚Ä¶ \"Biographi‚Ä¶ spa      2003-02-06  https://b‚Ä¶\n 5 Alberto Montes Gonz√°lez  Bracero  \"Biographi‚Ä¶ spa      2005-07-27  https://b‚Ä¶\n 6 Jes√∫s Ort√≠z Torres       Bracero  \"Biographi‚Ä¶ spa      2005-08-31  https://b‚Ä¶\n 7 Jos√© G. Corral           Son of ‚Ä¶ \"Biographi‚Ä¶ spa      2005-11-12  https://b‚Ä¶\n 8 Eduardo De Santiago      Bracero  \"Biographi‚Ä¶ spa      2003-03-03  https://b‚Ä¶\n 9 Salvador Torres Beltr√°n  Bracero  \"Biographi‚Ä¶ spa      2006-05-22  https://b‚Ä¶\n10 Luis Zamudio Villagomez  Bracero  \"Biographi‚Ä¶ spa      2005-07-27  https://b‚Ä¶\n# ‚Ñπ 65 more rows\n```\n\n\n:::\n:::\n\n\n## filter() (cont.) {.smaller}\n- You can also combine multiple conditions: \n  - `>` = greater than \n  - `>=` = greater than or equal to\n  - `<` = less than\n  - `<=` less than or equal to\n  - `==` equal to\n  - `!=` does not equal\n\n  - Can use `&` to combine conditions\n  - `|` for or \n- Perhaps we're interested in interviews that took place after 2004 in English:\n\n::: {.cell}\n\n```{.r .cell-code}\nbracero_clean |>\n  filter(date_format >= 2004-01-01 & language == \"eng\")\n```\n:::\n\n\n## filter() and str_detect()\n- We can also combine filter with str_detect()\n\n::: {.cell}\n\n```{.r .cell-code}\nbracero_clean |> \n  filter(str_detect(interviewee, \"Alberto\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 √ó 6\n  interviewee              subject description   language date_format identifier\n  <chr>                    <chr>   <chr>         <chr>    <date>      <chr>     \n1 Alberto Montes Gonz√°lez  Bracero \"Biographica‚Ä¶ spa      2005-07-27  https://b‚Ä¶\n2 Alberto Magall√≥n Jim√©nez Bracero \"Biographica‚Ä¶ spa      2005-07-28  https://b‚Ä¶\n3 Alberto Mendoza Torres   bracero \"Biographica‚Ä¶ spa      2003-09-26  https://b‚Ä¶\n```\n\n\n:::\n:::\n\n\n## arrange()\n- `arrange()` sorts your rows based on the values in the columns. \n- If you sort more than one row, it will sort the first variable, and the others will be used to \"break ties\"\n- including `desc()` wills sort your column values big to small. \n\n::: {.cell}\n\n```{.r .cell-code}\nbracero_clean |> \n  arrange(date_format, interviewee)\n```\n:::\n\n\n# Exercise Two {.smaller}\n1. Filter the `bracero_clean` dataframe for any interviews that took place before 2005 with an interviewee whose name includes \"Guadalupe\".\n\n2. Sort the `bracero_clean` data frame in descending order by date. What was the date, how many interviews took place, and who is listed first?\n\n3. Filter the `bracero_clean` dataframe for any interviewees that mention \"California\". How many interviewees mention California? \n  - If you're interested in reading descriptions, you can type \"bracero_clean$description[]\" with the row number in brackets to print the description in your environment window. \n\n\n# Grouping Data \n\n## group_by() function {.smaller}\n- `group_by()` function is really helpful for dividing your data into groups for analysis. \n- `group_by()` function does not change your data, but will change subsequent operations if you use them in tandem with a `group_by()`\n\n::: {.cell}\n\n```{.r .cell-code}\nbracero_clean |> \n  group_by(language)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 90 √ó 6\n# Groups:   language [2]\n   interviewee              subject  description language date_format identifier\n   <chr>                    <chr>    <chr>       <chr>    <date>      <chr>     \n 1 Richard Hancock          Do√±a An‚Ä¶ \"Biographi‚Ä¶ eng      2003-04-21  https://b‚Ä¶\n 2 Pedro Cantor             Bracero  \"Biographi‚Ä¶ spa      2005-07-27  https://b‚Ä¶\n 3 Asterio L√≥pez Le√≥n       Bracero  \"Biographi‚Ä¶ spa      2006-05-22  https://b‚Ä¶\n 4 Vincente Delgado         Bracero  \"Biographi‚Ä¶ spa      2005-09-01  https://b‚Ä¶\n 5 Inez Rios                Interac‚Ä¶ \"Biographi‚Ä¶ eng      2003-01-31  https://b‚Ä¶\n 6 Manuel Enriquez Savignac Bureau ‚Ä¶ \"Biographi‚Ä¶ spa      2003-02-06  https://b‚Ä¶\n 7 Alberto Montes Gonz√°lez  Bracero  \"Biographi‚Ä¶ spa      2005-07-27  https://b‚Ä¶\n 8 Ernesto Espino           Son of ‚Ä¶ \"Biographi‚Ä¶ eng      2005-11-12  https://b‚Ä¶\n 9 Jes√∫s Ort√≠z Torres       Bracero  \"Biographi‚Ä¶ spa      2005-08-31  https://b‚Ä¶\n10 Jos√© G. Corral           Son of ‚Ä¶ \"Biographi‚Ä¶ spa      2005-11-12  https://b‚Ä¶\n# ‚Ñπ 80 more rows\n```\n\n\n:::\n:::\n\n\n\n## summarize()\n- `summarize()` is often used in tandem with the `group_by()` function to calculate a summary statistic for a a group. \n\n::: {.cell}\n\n```{.r .cell-code}\nbracero_clean |>\n group_by(language) |>\n summarize(n_interviews = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 √ó 2\n  language n_interviews\n  <chr>           <int>\n1 eng                15\n2 spa                75\n```\n\n\n:::\n:::\n\n\n## slice {.smaller}\n- `slice_` functions help select a subset of rows\n - slice_head(n = 5) will take the first five rows of the data\n - slice_tail(n = 5) will take the last five rows of the data\n - slice_min(x, n = 5) will take the five rows of data with the lowest values for column x. \n - slice_max(x, n = 5) will take the five rows of data with the highest values for column x. \n - slice_sample(n = 5) will select 5 random rows of data.\n\n::: {.cell}\n\n```{.r .cell-code}\nbracero |>\n  slice_sample(n = 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 √ó 6\n   title                      subject      description date  identifier language\n   <chr>                      <chr>        <chr>       <chr> <chr>      <chr>   \n 1 Vincente Delgado           Bracero      \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa     \n 2 Salvador Esparza Carre√±o   Bracero      \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ spa     \n 3 Rodolfo Cruz Figueroa      Bracero      \"Biographi‚Ä¶ 2002‚Ä¶ https://b‚Ä¶ spa     \n 4 Rodrigo Flores             Bracero      \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ spa     \n 5 Heriberto Cort√©z Cort√©z    Bracero      \"Biographi‚Ä¶ 2002‚Ä¶ https://b‚Ä¶ spa     \n 6 H√©ctor Sol√≠s Fuentes       Bracero      \"Biographi‚Ä¶ 2002‚Ä¶ https://b‚Ä¶ spa     \n 7 Pedro Garc√≠a               Bracero      \"Biographi‚Ä¶ 2006‚Ä¶ https://b‚Ä¶ spa     \n 8 Alberto Montes Gonz√°lez    Bracero      \"Biographi‚Ä¶ 2005‚Ä¶ https://b‚Ä¶ spa     \n 9 Alberto Mendoza Torres     bracero      \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ spa     \n10 Anacleto Morales Franco    Bracero      \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ spa     \n11 Bernardo Trevi√±o Cervantes bracero      \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ spa     \n12 Amadeo Tapia               Bracero      \"Biographi‚Ä¶ 2006‚Ä¶ https://b‚Ä¶ spa     \n13 Enrique Torres S√°nchez     Bracero      \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ spa     \n14 Socorro O. P√©rez           Clerk typis‚Ä¶ \"Biographi‚Ä¶ 2003‚Ä¶ https://b‚Ä¶ eng     \n15 David Alfaro Sandoval      Bracero      \"Biographi‚Ä¶ 2006‚Ä¶ https://b‚Ä¶ spa     \n```\n\n\n:::\n:::\n\n\n# Exercise Three {.smaller}\n1. How many Braceros were interviewed in this dataset (i.e., Bracero is the subject)? Use a `group_by` function to count.\n  - Hint: R is case-sensitive. \n2. How many non-braceros were interviewed in this dataset? \n3.  Using the subject column, can you create a new factor column called `topic_group`that groups the subjects into 3-5 factors?\n  - Hint: use `mutate()`, and `case_match()` to classify the groups into a new column called `topic_group`, I've given you a start!\n4. Are there any interesting patterns in language spoken among your `topic_groups`? Use a `group_by` and `summarize` function to calculate.\n\n# Exercise Four \n1. Explore the Bracero Archives and listen to at least one interview. \n  - Note that most all bracero interviews are conducted in spanish, if you're interested in a perspective from an english-speaking bracero, I would suggest the interview with [Mr. Cris Luna](https://braceroarchive.org/items/show/138), a Bracero from Ozuluama, Veracruz, Mexico.\n\n  Answer questions 2 and 3 using this week's readings. ",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}